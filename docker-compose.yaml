version: '3'

services:

  fastapi_app:
    build:
      context: .
      dockerfile: Dockerfile
#    ports:
#      - "8001:8001"
    environment:
        - RABBIT_HOST=0.0.0.0
        - ARANGO_HOST=http://0.0.0.0:8529
        - ARANGO_PORT=8529
        - MINIO_HOST=0.0.0.0
    depends_on:
      - rabbitmq
    network_mode: service:gluetun


  simple_playwright_service:
      build:
        context: .
        dockerfile: Dockerfile
      deploy:
        replicas: 10
      depends_on:
        rabbitmq:
          condition: service_healthy
        redis:
          condition: service_healthy
        gluetun:
          condition: service_healthy
      restart: always
      network_mode: service:gluetun
      environment:
        - RABBIT_HOST=0.0.0.0
        - ARANGO_HOST=http://0.0.0.0:8529
        - ARANGO_PORT=8529
        - MINIO_HOST=0.0.0.0
        - REDIS_HOST=0.0.0.0
      command: ["pipenv", "run", "python3", "-u", "src/service/simple_playwright.py"]


  gluetun:
    container_name: vpn
    image: qmcgaw/gluetun
    cap_add:
      - NET_ADMIN
    environment:
      - VPNSP=yourvpnprovider
      - OPENVPN_USER=yourvpnuser
      - OPENVPN_PASSWORD=yourvpnpassword
      # add other environment variables as needed, refer to Gluetun's documentation for full details
    volumes:
      - ./gluetun:/gluetun
    ports:
      - "8000:8000" # for the built-in HTTP control server
      - "8001:8001" # fast API
      - "15672:15672"  # Web management interface
      - "5672:5672"    # Default RabbitMQ service port
      - "9000:9000" # minio
      - "9001:9001" # minio
      - "8529:8529" # arangodb
      - "6379:6379" # redis

    restart: always

  redis:
      image: redis:latest
      volumes:
        - redis-data:/data
      network_mode: service:gluetun
      healthcheck:
        test: [ "CMD", "redis-cli", "ping" ]
        interval: 10s
        timeout: 5s
        retries: 3

  minio:
    image: minio/minio
    volumes:
      - minio-data:/data
#    ports:
#      - "9000:9000"
#      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: adminadmin
    command: server --console-address :9001 /data
    network_mode: service:gluetun


  arangodb:
    image: arangodb/arangodb:latest
#    ports:
#      - "8529:8529"
    environment:
      ARANGO_ROOT_PASSWORD: rootpassword  # You should change this to something secure!
      ARANGO_NO_AUTH: "1"                # 0 means authentication is enabled, set to 1 to disable it (not recommended for production)
    volumes:
      - arangodb-data:/var/lib/arangodb3
      - arangodb-apps:/var/lib/arangodb3-apps
    network_mode: service:gluetun
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://arangodb:8529/_admin/echo" ]
      interval: 30s
      timeout: 10s
      retries: 3


  rabbitmq:
    image: "rabbitmq:management"
#    ports:
#      - "15672:15672"  # Web management interface
#      - "5672:5672"    # Default RabbitMQ service port
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    network_mode: service:gluetun
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 15s
      timeout: 10s
      retries: 3

#    networks:
#      - vpn_network

volumes:
  redis-data:
  minio-data:
  arangodb-data:
  arangodb-apps:
  rabbitmq-data:
  gluetun:

networks:
  vpn_network:
    driver: bridge